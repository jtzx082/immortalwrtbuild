name: Build ImmortalWRT

on:
  workflow_dispatch:
  push:
    paths:
      - '.config'
      - 'files/**'       # 新增：文件变更也触发构建[7](@ref)
      - 'packages/**'    # 新增：软件包配置变更触发

env:
  IMAGEBUILDER_URL: https://downloads.immortalwrt.org/releases/24.10.0/targets/x86/64/immortalwrt-imagebuilder-24.10.0-x86-64.Linux-x86_64.tar.zst
  TARGET: x86/64
  ROOTFS_SIZE: 1024

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 30  # 新增：防止卡死[1](@ref)

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0   # 获取完整提交历史

    - name: Cache ImageBuilder
      uses: actions/cache@v3
      id: cache-ib
      with:
        path: immortalwrt-imagebuilder-*
        key: ${{ runner.os }}-imagebuilder-${{ hashFiles(env.IMAGEBUILDER_URL) }}

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo DEBIAN_FRONTEND=noninteractive apt-get install -y \
          zstd build-essential libncurses5-dev git libssl-dev
      env:
        DEBIAN_FRONTEND: noninteractive  # 避免交互提示

    - name: Download ImageBuilder
      if: steps.cache-ib.outputs.cache-hit != 'true'
      run: |
        curl -LOf --retry 3 --retry-delay 5 "${{ env.IMAGEBUILDER_URL }}"
        ls -lh *.zst

    - name: Extract ImageBuilder
      run: |
        zstd -d --long=31 immortalwrt-imagebuilder-*.tar.zst -o imagebuilder.tar
        tar xvf imagebuilder.tar --strip-components=1
        [ -d bin ] || mkdir -p bin/targets
        rm -f imagebuilder.tar

    - name: Prepare configuration
      run: |
        mkdir -p ./target/linux/${{ env.TARGET }}
        [ -f .config ] && cp -v .config ./target/linux/${{ env.TARGET }}/config || echo "Using default config"

    - name: Build firmware
      run: |
        set -euxo pipefail  # 严格错误检查[7](@ref)
        export PATH=$PATH:$PWD/staging_dir/host/bin
        make -j$(nproc) image \
          PROFILE="generic" \
          PACKAGES="$(PKG_OPTIONS:-)" \
          FILES="./files" \
          EXTRA_IMAGE_NAME="custom-${{ github.run_id }}" \
          CONFIG_TARGET_ROOTFS_PARTSIZE=${{ env.ROOTFS_SIZE }}

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      if: success()
      with:
        name: immortalwrt-${{ github.run_number }}
        path: |
          bin/targets/${{ env.TARGET }}/packages
          bin/targets/${{ env.TARGET }}/immortalwrt-*
        retention-days: 7
